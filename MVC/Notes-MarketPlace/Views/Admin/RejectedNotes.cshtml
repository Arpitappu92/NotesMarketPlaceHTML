@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "RejectedNotes";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<head>
   
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, intial-scale=1">

    <title>Rejected Notes</title>

    <link rel="shortcut icon" href="images/home/favicon.ico">
    <link href="~/Content/AdminCss/style.css" rel="stylesheet">

    <link href="~/Content/AdminCss/responsive.css" rel="stylesheet">


    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300;1,400;1,600;1,700;1,800&display=swap"
          rel="stylesheet">

    <link rel="stylesheet" href="~/Content/AdminCss/font-awesome/css/all.css">

</head>

<body>


    <section class="reject_note">
        <div class="container">

            <p id="tit">Rejected Notes </p>
            @using (Html.BeginForm("RejectedNotes", "Admin", FormMethod.Get, new { id = "AllSeachNote" }))
            {
<div class="mid-head">
    <div class="drops">
        <div class="search_detail">
            <p>Seller</p>
        </div>

        <div class="dropdown_tic">
          

            @Html.DropDownList("SellerName", (SelectList)ViewBag.SellerName, "Select Seller", new { id = "SellerName", name = "SellerName", @class = "form-control", onchange = "NoteFunction();" })

        </div>

    </div>


    <div style="display:flex; align-items:center;">
        <div class="search form-inline">
            <div class="searchContainer form-group">
                <i class="fas fa-search form-control-feedback "></i>
                <input type="text" name="Search" class="form-control" placeholder="Search" />
            </div>

        </div>
        <div class="bttn">
            <button type="submit" class="btn allBtn">SEARCH</button>
        </div>
    </div>

</div>            }

            <div class="row rejected-notes-table">

                <div class="col-md-12">
                    <div class="table-responsive{-sm|-md|-lg|-xl} data-table rejected_table">
                        <table class="table table-bordered text-nowrap">
                            <thead>
                                <tr>
                                  

                                    <th scope="col" class="text-center">SR NO.</th>
                                    <th scope="col">@Html.ActionLink("TITLE", "NotesRejected", new { SortOrder = ViewBag.TitleSortParam, Search = Request.QueryString["Search"] })</th>
                                    <th scope="col">@Html.ActionLink("CATEGORY", "NotesRejected", new { SortOrder = ViewBag.CategorySortParam, Search = Request.QueryString["Search"] })</th>
                                    <th scope="col">@Html.ActionLink("SELLER", "NotesRejected", new { SortOrder = ViewBag.SellerSortParam, Search = Request.QueryString["Search"] })</th>
                                    <th></th>
                                    <th scope="col">@Html.ActionLink("DATE ADDED", "NotesRejected", new { SortOrder = ViewBag.DateSortParam, Search = Request.QueryString["Search"] })</th>
                                    <th scope="col">@Html.ActionLink("Rejected By", "NotesRejected", new { SortOrder = ViewBag.RejectedBySortParam, Search = Request.QueryString["Search"] })</th>
                                    <th scope="col" class="text-center">Remark</th>
                                    <th></th>


                                </tr>
                            </thead>
                            <tbody>
                                @{ IPagedList<Notes_MarketPlace.Models.RejectedNoteAdmin> RejectedNote = ViewBag.NotesRejected; }

                                @{ var count = 0;
                                    if (RejectedNote.Count == 0)
                                    {
                        <tr>
                            <td colspan="9" class="text-center NoRecord">No Records Found</td>
                        </tr> } }

                                @foreach (var item in RejectedNote)
                                {

                    <tr>
                        <td>@(count + ((RejectedNote.PageNumber - 1) * RejectedNote.PageSize) + 1)</td>
                        <td>
                            <a style="color:#6255a5" href="/Admin/NoteDetails_admin/@item.NoteDetails.ID">  @item.NoteDetails.NoteTitle</a>
                        </td>
                        <td>
                            @item.Category.CategoryName
                        </td>
                        <td>@item.user.FirstName @item.user.LastName</td>
                        <td><a href="/adminMember/MemberDetails/@item.user.ID"><i class="fas fa-eye"></i></a> </td>
                        <td>
                            @item.NoteDetails.ModifiedDate.Value.ToString("dd-MM-yyyy, HH:mm")
                        </td>
                        <td>@item.admin.FirstName @item.admin.LastName</td>
                        <td>
                            @item.NoteDetails.AdminRemarks
                        </td>
                        <td>
                            <div class="dropdown">
                                <i class="fas fa-ellipsis-v" type="button" id="dropdownMenuButton"
                                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                </i>
                                <div class="dropdown-menu dropdown-menu-right dropdown-menu-lg-right "
                                     aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="/Admin/Approve/@item.NoteDetails.ID">Approve</a>
                                    <a class="dropdown-item" href="/Front/DownloadAttechedFile/@item.NoteDetails.ID">Download Notes</a>
                                    <a class="dropdown-item" href="/Admin/NoteDetails_Admin/@item.NoteDetails.ID">View More Details</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                                { count = count + 1; }

                                }
                                
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>


            <div class="row paging">
                <div class="col-md-12 text-center">
                   

                        @Html.PagedListPager(RejectedNote, page => Url.Action("NotesRejected", new
                   {
                       page,
                       Search = Request.QueryString["Search"],
                       SortOrder = Request.QueryString["SortOrder"],
                       SellerName = Request.QueryString["SellerName"],
                   })
, new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded,
    DisplayPageCountAndCurrentLocation = false,
    MaximumPageNumbersToDisplay = 5,
    LiElementClasses = new string[] { "pagination" },
}
)
                    
                </div>
            </div>
        </div>
        </div>
    </section>




    <script src="~/Scripts/AdminJs/bootstrap/popper.min.js"></script>

    <script src="~/Scripts/AdminJs/script.js"></script>


</body>

</html>
